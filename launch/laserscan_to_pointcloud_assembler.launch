<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="laser_scan_topics" default="tilt_scan" />
	<arg name="number_of_scans_to_assemble_per_cloud" default="10" />
	<arg name="timeout_for_cloud_assembly" default="1.0" />
	<arg name="pointcloud_publish_topic" default="ambient_pointcloud" />

	<!-- the assembly configurations can be dynamically changed based on twist messages (or twist from odometry messages) -->
	<!-- the assembly time and number of scans to join are set to the lowest values computed from the linear angular velocities -->
	<arg name="dynamic_update_of_assembly_configuration_from_twist_topic" default="" />
	<arg name="dynamic_update_of_assembly_configuration_from_odometry_topic" default="odom" />
	<arg name="dynamic_update_of_assembly_configuration_from_imu_topic" default="" /> <!-- assumes that the robot starts stopped, because it incrementally updates the linear velocity based on the imu linear acceleration -->
	<arg name="min_number_of_scans_to_assemble_per_cloud" default="2" />
	<arg name="max_number_of_scans_to_assemble_per_cloud" default="10" />
	<arg name="min_timeout_seconds_for_cloud_assembly" default="0.3" />
	<arg name="max_timeout_seconds_for_cloud_assembly" default="1.3" />
	<arg name="max_linear_velocity" default="0.025" /> <!-- when the linear velocity of the robot is equal or greater than this value, the number of scans to join and assembly timeout will be set to their minimum values specified above -->
	<arg name="max_angular_velocity" default="0.174532925" /> <!-- when the angular velocity of the robot is equal or greater than this value, the number of scans to join and assembly timeout will be set to their minimum values specified above -->
	
	<arg name="target_frame" default="map" />
	<arg name="use_spherical_interpolation" default="true" />
	<arg name="min_range_cutoff_percentage_offset" default="2.00" />
	<arg name="max_range_cutoff_percentage_offset" default="0.95" />
	<arg name="tf_lookup_timeout" default="0.15" />
	<arg name="recovery_frame" default="odom" />
	<arg name="initial_recovery_transform_in_base_link_to_target" default="false" /> <!-- if false -> transform assumed to be recovery_link -> target -->
	<arg name="base_link_frame_id" default="base_footprint" />
	<arg name="recovery_to_target_frame_transform_initial_x" default="0.0" />
	<arg name="recovery_to_target_frame_transform_initial_y" default="0.0" />
	<arg name="recovery_to_target_frame_transform_initial_z" default="0.0" />
	<arg name="recovery_to_target_frame_transform_initial_roll" default="0.0" />
	<arg name="recovery_to_target_frame_transform_initial_pitch" default="0.0" />
	<arg name="recovery_to_target_frame_transform_initial_yaw" default="0.0" />

	<!-- LaserScan assembler -->
	<node pkg="laserscan_to_pointcloud" type="laserscan_to_pointcloud_assembler" name="laserscan_to_pointcloud_assembler" respawn="true" output="screen">
		<param name="laser_scan_topics" type="str" value="$(arg laser_scan_topics)" />
		<param name="pointcloud_publish_topic" type="str" value="$(arg pointcloud_publish_topic)" />
		<param name="number_of_scans_to_assemble_per_cloud" type="int" value="$(arg number_of_scans_to_assemble_per_cloud)" />
		<param name="timeout_for_cloud_assembly" type="double" value="$(arg timeout_for_cloud_assembly)" />
		<param name="dynamic_update_of_assembly_configuration_from_twist_topic" type="str" value="$(arg dynamic_update_of_assembly_configuration_from_twist_topic)" />
		<param name="dynamic_update_of_assembly_configuration_from_odometry_topic" type="str" value="$(arg dynamic_update_of_assembly_configuration_from_odometry_topic)" />
		<param name="dynamic_update_of_assembly_configuration_from_imu_topic" type="str" value="$(arg dynamic_update_of_assembly_configuration_from_imu_topic)" />
		<param name="min_number_of_scans_to_assemble_per_cloud" type="int" value="$(arg min_number_of_scans_to_assemble_per_cloud)" />
		<param name="max_number_of_scans_to_assemble_per_cloud" type="int" value="$(arg max_number_of_scans_to_assemble_per_cloud)" />
		<param name="min_timeout_seconds_for_cloud_assembly" type="double" value="$(arg min_timeout_seconds_for_cloud_assembly)" />
		<param name="max_timeout_seconds_for_cloud_assembly" type="double" value="$(arg max_timeout_seconds_for_cloud_assembly)" />
		<param name="max_linear_velocity" type="double" value="$(arg max_linear_velocity)" />
		<param name="max_angular_velocity" type="double" value="$(arg max_angular_velocity)" />
		<param name="target_frame" type="str" value="$(arg target_frame)" />
		<param name="min_range_cutoff_percentage_offset" type="double" value="$(arg min_range_cutoff_percentage_offset)" />
		<param name="max_range_cutoff_percentage_offset" type="double" value="$(arg max_range_cutoff_percentage_offset)" />
		<param name="include_laser_intensity" type="bool" value="false" />
		<param name="use_spherical_interpolation" type="bool" value="$(arg use_spherical_interpolation)" />
		<param name="tf_lookup_timeout" type="double" value="$(arg tf_lookup_timeout)" />
		<param name="recovery_frame" type="str" value="$(arg recovery_frame)" />
		<param name="initial_recovery_transform_in_base_link_to_target" type="bool" value="$(arg initial_recovery_transform_in_base_link_to_target)" />
		<param name="base_link_frame_id" type="str" value="$(arg base_link_frame_id)" />
		<param name="recovery_to_target_frame_transform_initial_x" type="double" value="$(arg recovery_to_target_frame_transform_initial_x)" />
		<param name="recovery_to_target_frame_transform_initial_y" type="double" value="$(arg recovery_to_target_frame_transform_initial_y)" />
		<param name="recovery_to_target_frame_transform_initial_z" type="double" value="$(arg recovery_to_target_frame_transform_initial_z)" />
		<param name="recovery_to_target_frame_transform_initial_roll" type="double" value="$(arg recovery_to_target_frame_transform_initial_roll)" />
		<param name="recovery_to_target_frame_transform_initial_pitch" type="double" value="$(arg recovery_to_target_frame_transform_initial_pitch)" />
		<param name="recovery_to_target_frame_transform_initial_yaw" type="double" value="$(arg recovery_to_target_frame_transform_initial_yaw)" />
	</node>
</launch>
